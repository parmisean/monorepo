name: main-workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: CommitLint
        uses: wagoid/commitlint-github-action@v5

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: Build
        run: go build -v ./...

      - name: Install golint
        run: go install golang.org/x/lint/golint@latest

      - name: Run golint
        run: golint -set_exit_status ./...

      - name: Verify dependencies
        run: go mod verify

      - name: Run go vet
        run: go vet ./...

      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Run staticcheck
        run: staticcheck ./...

  tests:
    runs-on: ubuntu-latest
    needs: build-and-lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19
          cache: true

      - name: Run tests
        run: go test -race -vet=off ./... -v

  build-deploy-list:
    runs-on: ubuntu-latest
    needs: tests
    outputs:
      api_service: ${{ steps.filter.outputs.api_service }}
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build Changelist
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            shared: &shared
              - .github/workflows/**
            api_service:
              - *shared
              - build/package/api-service.dockerfile
              - cmd/api-service/**

  deploy-api-gateway:
    runs-on: ubuntu-latest
    needs: build-deploy-list
    if: ${{ github.event_name == 'push' && needs.build-deploy-list.outputs.api_service == 'true' }}
    steps:
      - name: deploy
        run: echo deploying api gateway

  deploy-api-service:
    runs-on: ubuntu-latest
    needs: build-deploy-list
    if: ${{ github.event_name == 'push' && needs.build-deploy-list.outputs.api_service == 'true' }}
    steps:
      - name: deploy
        run: echo deploying api service
